{"version":3,"sources":["components/Table.js","components/Teams.js","components/page.js","App.js","index.js"],"names":["Cell","styled","div","Category","input","SelectTeam","props","color","Table","addCat","newCat","state","categories","push","setState","removeCat","pop","onImageChange","event","target","files","img","image","URL","createObjectURL","document","getElementById","style","backgroundImage","this","teams","handleClick","handleImagePoints","teamIdArray","Object","keys","className","onClick","class","id","map","category","i","value","onChange","teamId","type","name","React","Component","TeamInput","TeamScore","TeamScoreBoxConainer","Teams","defaultValue","score","Page","toggleOp","cell","opacity","elementId","newPointsTeam","element","imageWon","classList","remove","add","handleSelectClick","valueId","innerText","replace","selectedElement","parentElement","won","includes","filter","forEach","newScore","parseInt","newStateTeams","oldState","oldStatesTeams","removeTeam","length","addTeam","lastKey","newKey","colors","0","1","2","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f5d2b29.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport './Table.css'\r\n\r\nconst Cell = styled.div`\r\nborder: 2px solid white !important;\r\ncolor:white;\r\ntext-align: center;\r\nbackground-color: #007bff;\r\npadding: 0;\r\npadding-top: 15px;\r\nfont-size: 25px;\r\nwidth:100%;\r\nopacity: 1;\r\ntransition: opacity 1s;\r\n`\r\n\r\nconst Category = styled.input`\r\nbackground-color: #2b76b7;\r\ncolor: #f4e371;\r\ntext-align: center;\r\nwidth: 150px;\r\npadding: 5px 10px;\r\nfont-size: 30px;\r\nwidth:100%;\r\nborder: 2px solid white !important;\r\n\r\n`\r\nconst SelectTeam = styled.div`\r\n    cursor: pointer;\r\n    opacity:0.6;\r\n    width:30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid white;\r\n    transition: border-radius, border, 0.7s;\r\n    &:hover {\r\n        opacity:1 !important;\r\n        border-radius: 0!important;\r\n        border: 2px solid white;\r\n    }\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            categories: [\"Sport\", \"Music\", \"Color\", \"Film\", \"Food & Drinks\"],\r\n            image: null\r\n        }\r\n    }\r\n\r\n    addCat = () => {\r\n        var newCat = this.state.categories\r\n        newCat.push('New Category')\r\n        this.setState({ categories: newCat })\r\n    }\r\n\r\n    removeCat = () => {\r\n        var newCat = this.state.categories\r\n        newCat.pop()\r\n        this.setState({ categories: newCat })\r\n    }\r\n\r\n    onImageChange = event => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            let img = event.target.files[0];\r\n            this.setState({\r\n                image: URL.createObjectURL(img)\r\n            }, () => {\r\n                var imgElement = document.getElementById(\"imageContainer\")\r\n                imgElement.style.backgroundImage = `url(${this.state.image})`\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { teams, handleClick, handleImagePoints } = this.props\r\n        const teamIdArray = Object.keys(teams)\r\n        const categories = this.state.categories;\r\n        return (\r\n            <div >\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <i onClick={() => this.removeCat()} class=\"fas fa-minus-circle\"></i>\r\n\r\n                    <div className=\"tableContainer\">\r\n\r\n                        <div className=\"d-flex justify-content-center m-0 \">\r\n                            <div id=\"imageContainer\"></div>\r\n\r\n                            {\r\n                                categories.map((category, i) => {\r\n                                    return (\r\n                                        <div key={i}>\r\n                                            <Category id={category} value={this.state.categories[i]} onChange={(event) => {\r\n                                                var newCat = categories\r\n                                                newCat[i] = event.target.value\r\n                                                this.setState({ categories: newCat })\r\n                                            }} className=\"border category\">\r\n                                            </Category>\r\n\r\n\r\n                                            <Cell>\r\n                                                <span id={category + 100}>100$</span>\r\n                                                <div className=\" d-flex justify-content-around pb-2\">\r\n                                                    {\r\n\r\n                                                        teamIdArray.map(teamId => {\r\n\r\n                                                            return (\r\n\r\n\r\n                                                                <SelectTeam id={teamId + category + 100} onClick={() => handleClick(teamId, category + 100)} key={teamId} color={teams[teamId].color}>\r\n\r\n                                                                </SelectTeam>\r\n                                                            )\r\n                                                        })\r\n\r\n                                                    }\r\n                                                </div>\r\n                                            </Cell>\r\n                                            <Cell>\r\n                                                <span id={category + 200}>200$</span>\r\n                                                <div className=\" d-flex justify-content-around pb-2\">\r\n                                                    {\r\n\r\n                                                        teamIdArray.map(teamId => {\r\n\r\n                                                            return (\r\n\r\n\r\n                                                                <SelectTeam id={teamId + category + 200} onClick={() => handleClick(teamId, category + 200)} key={teamId} color={teams[teamId].color}>\r\n\r\n                                                                </SelectTeam>\r\n                                                            )\r\n                                                        })\r\n\r\n                                                    }\r\n                                                </div>\r\n                                            </Cell>\r\n                                            <Cell>\r\n                                                <span id={category + 300}>300$</span>\r\n                                                <div className=\" d-flex justify-content-around pb-2\">\r\n                                                    {\r\n\r\n                                                        teamIdArray.map(teamId => {\r\n\r\n                                                            return (\r\n\r\n\r\n                                                                <SelectTeam id={teamId + category + 300} onClick={() => handleClick(teamId, category + 300)} key={teamId} color={teams[teamId].color}>\r\n\r\n                                                                </SelectTeam>\r\n                                                            )\r\n                                                        })\r\n\r\n                                                    }\r\n                                                </div>\r\n                                            </Cell>\r\n                                            <Cell>\r\n                                                <span id={category + 400}>400$</span>\r\n                                                <div className=\" d-flex justify-content-around pb-2\">\r\n                                                    {\r\n\r\n                                                        teamIdArray.map(teamId => {\r\n\r\n                                                            return (\r\n\r\n\r\n                                                                <SelectTeam id={teamId + category + 400} onClick={() => handleClick(teamId, category + 400)} key={teamId} color={teams[teamId].color}>\r\n\r\n                                                                </SelectTeam>\r\n                                                            )\r\n                                                        })\r\n\r\n                                                    }\r\n                                                </div>\r\n                                            </Cell>\r\n                                            <Cell>\r\n                                                <span id={category + 500}>500$</span>\r\n                                                <div className=\" d-flex justify-content-around pb-2\">\r\n                                                    {\r\n\r\n                                                        teamIdArray.map(teamId => {\r\n\r\n                                                            return (\r\n\r\n\r\n                                                                <SelectTeam id={teamId + category + 500} onClick={() => handleClick(teamId, category + 500)} key={teamId} color={teams[teamId].color}>\r\n\r\n                                                                </SelectTeam>\r\n                                                            )\r\n                                                        })\r\n\r\n                                                    }\r\n                                                </div>\r\n                                            </Cell>\r\n\r\n                                        </div>\r\n\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <i onClick={() => this.addCat()} class=\"fas fa-plus-circle\"></i>\r\n                </div>\r\n                <div className=\"imageUpload text-center pt-4\">\r\n                    {!this.state.image ?\r\n                        <div>\r\n                            <div className=\"d-flex justify-content-center align-items-center\">\r\n                                <h1 className=\"selectImage\">Upload Image &nbsp;</h1><i className=\"fas fa-arrow-circle-down\"></i>\r\n                            </div>\r\n                            <input type=\"file\" name=\"myImage\" onChange={this.onImageChange} />\r\n                        </div>\r\n                        :\r\n                        <div>\r\n\r\n                            <div className=\"d-flex justify-content-center align-items-center\">\r\n                                <p className=\"m-0 selectImage\">Image Uploaded &nbsp;</p>\r\n                                <i className=\"fas fa-check-square\"></i>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center\">\r\n\r\n                                {\r\n                                    teamIdArray.map(teamId => {\r\n\r\n                                        return (\r\n                                            <SelectTeam id={`imagePoint${teamId}`} className=\"m-2\" key={teamId} color={teams[teamId].color} onClick={() => handleImagePoints(teamId, `imagePoint${teamId}`)} >\r\n\r\n                                            </SelectTeam>\r\n\r\n\r\n\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\n\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst TeamInput = styled.input`\r\n    border: none;\r\n    background: transparent;\r\n    outline: none;\r\n    padding: 10px;\r\n    min-width: 30px !important;\r\n    width: fit-content;\r\n    color:white;\r\n    text-align: center;\r\n    width: 100%;\r\n    font-size: 25px;\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n    border: 1px solid black;\r\n    background-color: ${props => props.color};\r\n`\r\n\r\nconst TeamScore = styled.div`\r\n    background-color: white;\r\n    transition: 1s;\r\n    color: black;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    border-left: 1px solid black;\r\n    border-right: 1px solid black;\r\n    border-bottom: 1px solid black;\r\n`\r\n\r\nconst TeamScoreBoxConainer = styled.div`\r\n    padding: 10px;\r\n    width: 230px;\r\n\r\n`\r\n\r\n\r\n\r\nclass Teams extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { teams } = this.props\r\n        return (\r\n            <div className=\"d-flex\">\r\n\r\n                {\r\n                    Object.keys(teams).map(teamId => {\r\n\r\n                        return (\r\n\r\n                            <TeamScoreBoxConainer key={teamId}>\r\n                                <TeamInput color={teams[teamId].color} defaultValue={teams[teamId].name}></TeamInput>\r\n                                <TeamScore> {teams[teamId].score}</TeamScore>\r\n                            </TeamScoreBoxConainer>\r\n\r\n                        )\r\n                    })\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Teams","import React from 'react'\r\n\r\nimport Table from './Table'\r\nimport Teams from './Teams'\r\n\r\nclass Page extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.colors = ['red', 'green', 'blue', 'orange', 'purple', 'DeepPink']\r\n        this.state = {\r\n            teams: {\r\n                0: {\r\n                    name: 'Team 1',\r\n                    score: 0,\r\n                    id: 0,\r\n                    color: 'red',\r\n                    won: [],\r\n                    imageWon: false\r\n                },\r\n                1: {\r\n                    name: 'Team 2',\r\n                    score: 0,\r\n                    id: 1,\r\n                    color: 'green',\r\n                    won: [],\r\n                    imageWon: false\r\n                },\r\n                2: {\r\n                    name: 'Team 3',\r\n                    score: 0,\r\n                    id: 2,\r\n                    color: 'blue',\r\n                    won: [],\r\n                    imageWon: false\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    toggleOp = (cell) => {\r\n        cell.style.opacity = \"0.45\"\r\n    }\r\n\r\n    handleImagePoints = (teamId, elementId) => {\r\n        var element = document.getElementById(elementId)\r\n\r\n        //if team has already won\r\n        if (!this.state.teams[teamId].imageWon) {\r\n            element.classList.add(\"test\")\r\n            var newPointsTeam = this.state.teams\r\n            newPointsTeam[teamId].imageWon = true\r\n            newPointsTeam[teamId].score = newPointsTeam[teamId].score + 500\r\n            this.setState({teams: newPointsTeam})\r\n\r\n            return\r\n        } else {\r\n            var newPointsTeam = this.state.teams\r\n            newPointsTeam[teamId].imageWon = false\r\n            newPointsTeam[teamId].score = newPointsTeam[teamId].score - 500\r\n            this.setState({teams: newPointsTeam})\r\n            element.classList.remove(\"test\")\r\n            return\r\n        }\r\n\r\n\r\n        //if other team already won\r\n\r\n    }\r\n\r\n    handleSelectClick = (teamId, valueId) => {\r\n        var element = document.getElementById(valueId)\r\n        var score = element.innerText.replace(\"$\", \"\")\r\n        var selectedElement = document.getElementById(teamId + valueId)\r\n        this.toggleOp(element.parentElement)\r\n\r\n\r\n        //check id team has already won\r\n        if (this.state.teams[teamId].won.includes(valueId)) {\r\n            return\r\n        }\r\n\r\n        //check of other teams has won\r\n        var otherTeamsIds = Object.keys(this.state.teams).filter(value => value !== teamId)\r\n\r\n        otherTeamsIds.forEach(id => {\r\n            if (this.state.teams[id].won.includes(valueId)) {\r\n                var newScore = this.state.teams[id].score - parseInt(score)\r\n                var newStateTeams = this.state.teams\r\n                newStateTeams[id].score = newScore\r\n                newStateTeams[id].won = newStateTeams[id].won.filter(value => value !== valueId)\r\n                this.setState({ teams: newStateTeams })\r\n                var selectedElement = document.getElementById(id + valueId)\r\n\r\n                selectedElement.classList.remove(\"test\")\r\n\r\n                return\r\n            }\r\n        })\r\n\r\n\r\n\r\n        var oldState = this.state.teams[teamId]\r\n        oldState.score = parseInt(oldState.score) + parseInt(score)\r\n        var oldStatesTeams = this.state.teams\r\n        oldStatesTeams[teamId] = oldState\r\n        var newStateTeams = oldStatesTeams\r\n        newStateTeams[teamId].won.push(valueId)\r\n        selectedElement.classList.add(\"test\")\r\n        this.setState({ teams: newStateTeams })\r\n\r\n\r\n\r\n    }\r\n\r\n    removeTeam = () => {\r\n        var teams = this.state.teams\r\n        var keys = Object.keys(teams)\r\n        var lastKey = keys[keys.length - 1]\r\n\r\n        delete teams[lastKey];\r\n        this.setState({ teams })\r\n\r\n    }\r\n    addTeam = () => {\r\n        var teams = this.state.teams\r\n        var keys = Object.keys(teams)\r\n        var lastKey = keys[keys.length - 1]\r\n        var newKey = parseInt(lastKey) + 1\r\n\r\n        if (!newKey) {\r\n            newKey = 0\r\n        }\r\n\r\n        teams[newKey] = {\r\n            name: `Team ${newKey + 1}`,\r\n            score: 0,\r\n            id: newKey,\r\n            color: this.colors[newKey],\r\n            won: [],\r\n            imageWon: false\r\n        }\r\n\r\n        this.setState({ teams })\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n\r\n                    <i className=\"fas fa-minus-circle\" onClick={() => this.removeTeam()}></i>\r\n                    <Teams teams={this.state.teams} />\r\n                    <i className=\"fas fa-plus-circle\" onClick={() => this.addTeam()}></i>\r\n                </div>\r\n\r\n                <Table handleClick={this.handleSelectClick} handleImagePoints={this.handleImagePoints} teams={this.state.teams}> </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Page","import './App.css';\n\nimport Page from './components/page'\n\n\n\nfunction App() {\n  return (\n    <div  className=\"App d-flex justify-content-center align-items-center flex-column\">\n      <Page/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}